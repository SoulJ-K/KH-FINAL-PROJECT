<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	
	<select id="getListCount" resultType="_int">
		select count(*)
		from blist
		where f_status='Y' and category=#{cate}
	</select>
	
	<select id="selectList" resultType="Board">
		select *
		from(select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hy' li
		     from blist
		     where fno in (select fno2
		                   from heart
		                   where user_id=#{id})   
		    union
		    select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hn' li
		    from blist
		    where fno not in (select fno2
		                      from heart
		                      where user_id=#{id}) )
		where f_status='Y' and category=#{cate}
		order by rank desc
	</select>
	
	<select id="selectLtList" parameterType="map" resultType="Board">
		select *
		from(select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hy' li
		     from blist
		     where fno in (select fno2
		                   from heart
		                   where user_id=#{id})   
		    union
		    select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hn' li
		    from blist
		    where fno not in (select fno2
		                      from heart
		                      where user_id=#{id}) )
		where f_status='Y' and category=#{cate}
		order by f_create_date desc
	</select>
	
	<select id="selectHtList" parameterType="map" resultType="Board">
		select *
		from(select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hy' li
		     from blist
		     where fno in (select fno2
		                   from heart
		                   where user_id=#{id})   
		    union
		    select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hn' li
		    from blist
		    where fno not in (select fno2
		                      from heart
		                      where user_id=#{id}) )
		where f_status='Y' and category=#{cate}
		order by rank desc
	</select>
	
	<insert id="insertBoard">
		insert into board
		values(SEQ_BOARD.nextval, #{ftype}, #{price}, #{small_title}, #{ftitle}, #{category}, #{location}, #{lat}, #{lon}, 
				#{fcontain}, #{fncontain}, #{fcalendar}, #{fmaterials}, #{fminfo}, #{fprecaution}, #{user_id},
				 default, default, default, sysdate, default, #{originalFileName}, #{renameFileName}, #{introduce}, #{maxMember})
	</insert>
	
	<insert id="insertBoardOption">
		insert into choose
		values(SEQ_CHOOSE.nextval, #{oname}, #{price}, #{ocount}, SEQ_BOARD.currval, #{odeadline})
	</insert>
	
	<update id="updateBoard">
		update board
 		set FTYPE= #{ftype}, PRICE=#{price}, SMALL_TITLE=#{small_title}, FTITLE=#{ftitle}, CATEGORY=#{category}, LOCATION=#{location}, LAT=#{lat}, LON=#{lon}, 
			FCONTAIN=#{fcontain}, FNCONTAIN=#{fncontain}, FCALENDAR=#{fcalendar}, FMATERIALS=#{fmaterials}, FMINFO=#{fminfo}, FPRECAUTION=#{fprecaution}, 
			ORIGINALFILENAME=#{originalFileName},RENAMEFILENAME=#{renameFileName}, INTRODUCE=#{introduce}, MAXMEMBER=#{maxMember})
 		where fno = #{fno}	
	</update>
	
	<update id="updateBoardOption">
		update choose
		set ONAME=#{oname}, PRICE=#{price}, OCOUNT=#{ocount}, ODEADLINE=#{odeadline}
		where fno = #{fno}	
	</update>
	
	<update id="deleteBoard">
		update board
		set F_STATUS = 'N'
		where fno = #{fno}	
	</update>
	
	<delete id="deleteBoardOption">
		delete from choose
		where fno=#{fno}
	</delete>
	
	<select id="selectBoard" resultType="Board">
		select *
		from board
		where fno=#{fno} and f_status='Y'
	</select>
	
	<select id="getSearchListCount" resultType="_int">
		select count(*)
		from blist
		where f_status='Y' and category=#{cate} and 
		<![CDATA[ 
			price>=#{sc.startPrice} and price<=#{sc.endPrice}
		 ]]>
		<if test='ad2 != null'>
			and ad1=#{ad1} and ad2=#{ad2}
		</if> 
	</select>
	
	<select id="selectSearchList" parameterType="map" resultType="Board">
		select *
		from(select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hy' li
		     from blist
		     where fno in (select fno2
		                   from heart
		                   where user_id=#{id})   
		    union
		    select FNO, FTYPE, PRICE, SMALL_TITLE, FTITLE, CATEGORY, LOCATION, AD1, AD2, F_CREATE_DATE, F_STATUS, RSUM, RCOUNT, RANK, RENAMEFILENAME, 'hn' li
		    from blist
		    where fno not in (select fno2
		                      from heart
		                      where user_id=#{id}) )
		where f_status='Y' and category=#{cate} and
		<![CDATA[ 
			price>=#{sc.startPrice} and price<=#{sc.endPrice}
		 ]]>
		<if test='ad2 != null'>
			and ad1=#{ad1} and ad2=#{ad2}
		</if> 
			<if test='sc.popular != null'>
		    	order by rank desc
		    </if>
		    <if test='sc.latest != null'>
		    	order by f_create_date desc
		    </if>
		    <if test='sc.rate != null'>
				order by (rsum/decode(rcount,0,1,rcount)) desc
		    </if>
		    <if test='sc.highprice != null'>
		    	order by price desc
		    </if>
		    <if test='sc.lowprice != null'>
		    	order by price
		    </if>
	</select>
	
	<insert id="insertHeart">
		insert into heart
		values (SEQ_HEART.nextval, #{uid}, null, #{fno})
	</insert>
	
	<select id="readHeart" parameterType="map" resultType="_int">
		select count(*)
		from heart
		where user_id=#{uid} and fno2=#{fno}
	</select>
	
	<delete id="deleteHeart" parameterType="map">
		delete from heart
		where user_id=#{uid} and fno2=#{fno}
	</delete>
	
	<select id="selectFindList" resultType="Board">
		select *
		from board
		where user_id like '%' || #{search} || '%'
		or ftitle like '%' || #{search} || '%'
		or small_title like '%' || #{search} || '%'
		or f_status = 'Y'
	</select>
	
	<select id="getFindListCount" resultType="_int">
		select count(*)
		from board
		where user_id like '%' || #{search} || '%'
		or ftitle like '%' || #{search} || '%'
		or small_title like '%' || #{search} || '%'
		or f_status = 'Y'
	</select>
	
	<select id="selectwList" resultType="Board">
		select DISTINCT AD1, AD2
		from BLIST
		where category=#{cate}
	</select>
	
	<select id="makrLocation" resultType="Board">
		select *
		from board
	</select>
	
	<update id="plusHeart">
		update board
		set heart = heart + 1
		where fno=#{fno}
	</update>
	
	<update id="minusHeart">
		update board
		set heart = heart - 1
		where fno=#{fno}
	</update>
	
	<select id="selectMList" resultType="Board">
		<![CDATA[
		select *
		from (
			select rownum rnum, fno, ftype, price, small_title, ftitle, Round((rsum/rcount),1) as avgrv
			from board
			where rcount!=0 and rsum!=0 and f_status='Y' and ftype=1
			order by avgrv desc)
		where rnum<5
		]]>
	</select>
	
	<select id="selectCList" resultType="Board">
		<![CDATA[
		select *
		from (
			select rownum rnum, fno, ftype, price, small_title, ftitle, Round((rsum/rcount),1) as avgrv
			from board
			where rcount!=0 and rsum!=0 and f_status='Y' and ftype=2
			order by avgrv desc)
		where rnum<5
		]]>
	</select>
	
	<select id="selectUpMList" resultType="Board">
		<![CDATA[
		select *
		from (
			select rownum rnum, fno, ftype, price, small_title, ftitle, Round((rsum/rcount),1) as avgrv
			from board
			where rcount!=0 and rsum!=0 and f_status='Y' and ftype=1
			order by avgrv desc)
		where rnum<21
		]]>
	</select>
	
	<select id="selectUpCList" resultType="Board">
		<![CDATA[
		select *
		from (
			select rownum rnum, fno, ftype, price, small_title, ftitle, Round((rsum/rcount),1) as avgrv
			from board
			where rcount!=0 and rsum!=0 and f_status='Y' and ftype=2
			order by avgrv desc)
		where rnum<5
		]]>
	</select>
</mapper>
